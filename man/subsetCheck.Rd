% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.r
\name{subsetCheck}
\alias{subsetCheck}
\alias{checkRows}
\alias{checkCols}
\alias{checkSingleBracketSubset}
\alias{checkDoubleBracketSubset}
\alias{checkOther}
\title{Check for allowed subset types for subclasses of \linkS4class{coreData}.}
\usage{
checkRows(x, i)

checkCols(x, j)

checkSingleBracketSubset(x, i, j)

checkDoubleBracketSubset(x, i, j)

checkOther(x, i, j, ...)
}
\arguments{
\item{x}{An object of any of the core data classes.}

\item{i}{An integer vector or a logical vector of length equal to \code{length(x)}
giving the rows to be subsetted.}

\item{j}{An integer vector, a logical vector of length equal to
\code{length(slotNames(x))} or a character string giving the columns to be
subsetted.}

\item{...}{A series of named values, of the form \code{field = value}. See details
below.}
}
\value{
\code{invisible()} if successful, exits with an error otherwise.
\code{checkRows} and \code{checkCols} have the side effect of assigning a boolean within
the \code{parent.frame(2)}. \code{checkOther} returns \code{invisible()} if successful, and
has the side effect of assigning \code{i} within the calling frame.
}
\description{
This functions are for internal use. They are called within the \code{[},  \code{[<-},
\code{[[} and \code{[[<-} methods for \linkS4class{coreData},  check that the subsets are
appropriate and throw an informative error if they are not.
}
\details{
\code{[} and \code{[<-} allow a single subset vector, wich can be a \code{numeric} of length
not greater than the object's length, or a \code{logical}
of length equal to the object's length. Alternatively named arguments can be
used, where each name should match one of the object's slot names, and the
value assigned to such name should be of the same class as the corresponding
slot.

\code{[[} and \code{[[<-} allow for two subset vectors, for rows and columns
respectively. Constraints for row subsetting are identical to those of \code{[}.
Columns are subsettable by \code{character}, provided that every element within
the subset vector matches some slot name within the object.

\code{checkRows} and \code{checkCols} do most of the testing. If successful, they
assign a boolean \code{rows} and \code{cols} in the calling frame, that
controls if rows, columns or both are to be subsetted.

\code{checkOther} implements a simple \emph{query} mechanism inside \code{[}.
It will capture a series of named arguments that should have the form
\code{slotName = value}. Every row within the corresponding \code{slot} that matches
anything within \code{value} will be subsetted.
This is equivalent to writting inside \code{[} something like\preformatted{other <- list(...)
index <- !logical(length(x))    ## all TRUE
for (sl in names(other)) {
  who <- match(slot(x, sl), other[[sl]], nomatch = 0) > 0
  index <- index & who
}
x[index]
}

where \code{x} is the object to be subsetted. This mechanism cannot be used along
normal indices. If you provide both, named arguments will be ignored with a
warning.
}
